from django.db import models
from proprietaires.models import Proprietaire
from settings.models import Agent, Typebien, Residence, Soustypebien, Intermidiaire, Secteur, Quartier
import datetime



class Propriete(models.Model):

    STATUS = (
        ("LOCATION LONGUE DUREE", 'LOCATION LONGUE DUREE'),
        ("LOCATION COURTE DUREE", 'LOCATION COURTE DUREE'),
        ("FOND DE COMMERCE", 'FOND DE COMMERCE'),
        ("DROIT D'ENTREE", "DROIT D'ENTREE"),
        ("VENTE", 'VENTE')
    )

   

    reference = models.CharField(max_length=100)
    title = models.CharField(max_length=255)
    description = models.TextField()
    secteur = models.ForeignKey(Secteur, on_delete=models.CASCADE)
    quartier = models.ForeignKey(Quartier, on_delete=models.CASCADE)
    type_operation = models.CharField(max_length=50, choices=STATUS)
    type_bien = models.ForeignKey(Typebien, on_delete=models.CASCADE)
    sous_type_bien = models.ForeignKey(Soustypebien, on_delete=models.CASCADE, blank=True, null=True)
    agent = models.ForeignKey(Agent, on_delete=models.CASCADE, blank=True, null=True)
    residence = models.ForeignKey(Residence, on_delete=models.CASCADE, blank=True, null=True)
    num_appartment = models.CharField(max_length=20, blank=True, null=True)
    intermidiaire = models.ForeignKey(Intermidiaire, on_delete=models.CASCADE, blank=True, null=True)
    global_bedrooms = models.IntegerField(default=0)
    suite_number = models.IntegerField(default=0)
    master_number = models.IntegerField(default=0)
    superficie_habitable = models.IntegerField(default=0)
    superficie_terrain = models.IntegerField(default=0)
    superficie_construite = models.IntegerField(default=0)
    superficie_sol = models.IntegerField(default=0)
    superficie_terrasse = models.IntegerField(default=0)
    superficie_jardin = models.IntegerField(default=0)
    superficie_coure = models.IntegerField(default=0)
    residentiel = models.BooleanField(default=False)
    individuel = models.BooleanField(default=False)
    immeuble = models.BooleanField(default=False)
    habitation = models.BooleanField(default=False)
    commercial = models.BooleanField(default=False)
    mixte = models.BooleanField(default=False)
    recent = models.BooleanField(default=False)
    ancien = models.BooleanField(default=False)
    neuf = models.BooleanField(default=False)
    a_renover = models.BooleanField(default=False)
    semi_fini = models.BooleanField(default=False)
    economique = models.BooleanField(default=False)
    haut_standing = models.BooleanField(default=False)
    my_standing = models.BooleanField(default=False)
    vide = models.BooleanField(default=False)
    semi_meuble = models.BooleanField(default=False)
    meuble = models.BooleanField(default=False)
    equipee = models.BooleanField(default=False)
    semi_equipee = models.BooleanField(default=False)
    collective = models.BooleanField(default=False)
    titree = models.BooleanField(default=False)
    nbre_salon_marocain = models.IntegerField(default=0)
    nbre_salon_european = models.IntegerField(default=0)
    nbre_salon_cheminie = models.IntegerField(default=0)
    nbre_salon_sejour = models.IntegerField(default=0)
    nbre_cuisine_independante = models.IntegerField(default=0)
    nbre_cuisine_kitchinette = models.IntegerField(default=0)
    nbre_cuisine_americaine = models.IntegerField(default=0)
    cuisine_equipee = models.BooleanField(default=False)
    cuisine_amenagee = models.BooleanField(default=False)
    cuisine_lesdeux = models.BooleanField(default=False)
    cuisine_buanderie = models.BooleanField(default=False)
    bathrooms_italienne = models.IntegerField(default=0)
    bathrooms_baignoire = models.IntegerField(default=0)
    bathrooms_sde = models.IntegerField(default=0)
    bathrooms_hammam_beldi = models.IntegerField(default=0)
    nbre_terrasse = models.IntegerField(default=0)
    nbre_coure = models.IntegerField(default=0)
    nbre_balcon = models.IntegerField(default=0)
    nbre_c_anglaise = models.IntegerField(default=0)
    nbre_terrasse_toit = models.IntegerField(default=0)
    nbre_buanderie = models.IntegerField(default=0)
    piscine_privee = models.BooleanField(default=False)
    piscine_chauffee_privee = models.BooleanField(default=False)
    jacozzi_privee = models.BooleanField(default=False)
    jardin_privee = models.BooleanField(default=False)
    hammam_beldi_privee = models.BooleanField(default=False)
    piscine_collective = models.BooleanField(default=False)
    piscine_chauffee_collective = models.BooleanField(default=False)
    jacozzi_collective = models.BooleanField(default=False)
    jardin_collective = models.BooleanField(default=False)
    hammam_beldi_collective = models.BooleanField(default=False)
    ascenseur = models.BooleanField(default=False)
    escalier_secour = models.BooleanField(default=False)
    security = models.BooleanField(default=False)
    syndic = models.BooleanField(default=False)
    puit = models.BooleanField(default=False)
    goute_a_goute = models.BooleanField(default=False)
    local_technique = models.BooleanField(default=False)
    chauffeau_electrique = models.BooleanField(default=False)
    chauffeau_gaz = models.BooleanField(default=False)
    climatisation_centrale = models.BooleanField(default=False)
    climatisation_revirsible = models.BooleanField(default=False)
    climatisation_mural = models.BooleanField(default=False)
    origine_prospection = models.BooleanField(default=False)
    origine_interne = models.BooleanField(default=False)
    origine_intermidiaire = models.BooleanField(default=False)
    genre_marocain = models.BooleanField(default=False)
    genre_contemporain = models.BooleanField(default=False)
    genre_moderne = models.BooleanField(default=False)
    genre_traditionnel = models.BooleanField(default=False)
    price = models.IntegerField(default=0)
    loyer = models.IntegerField(default=0)
    avance = models.IntegerField(default=0)
    caution = models.CharField(max_length=200, blank=True, null=True)
    proprietaire = models.ForeignKey(Proprietaire, on_delete=models.CASCADE)
    parking_collectif = models.BooleanField(default=False)
    parking_prive = models.BooleanField(default=False)
    occuped = models.BooleanField(default=False)
    libre = models.BooleanField(default=True)
    occuped_date = models.CharField(max_length=100, null=True, blank=True)
    libre_date = models.CharField(max_length=100, null=True, blank=True)
    exclusive = models.BooleanField(default=True)
    block = models.CharField(max_length=100, null=True, blank=True)
    created_at = models.DateField(auto_now=True)
    
    class Meta:
        verbose_name_plural = "Propriet√©s"
    def __str__(self):
        return self.title
    

class Image(models.Model):
    pic = models.ImageField(upload_to='images')
    propriete = models.ForeignKey(Propriete, on_delete=models.CASCADE, related_name='images')